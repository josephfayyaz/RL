learning_rate: 0.00029423355463316483
n_steps: 2720
gamma: 0.905185039935176
batch_size: 85
n_epochs: 13
gae_lambda: 0.920071661785218
Best mean reward: 527.1323770533332
Best std reward: 23.189308784236726
Best hyperparameters: {'best_mean_reward': 527.1323770533332, 'best_std_reward': 23.189308784236726, 'lr': 8.234655384179927e-05, 'n_steps': 2400, 'gamma': 0.9337442569785808, 'batch_size': 75, 'n_epochs': 16, 'gl': 0.9970783069680812}
[34m[1mwandb[39m[22m: Ctrl + C detected. Stopping sweep.
Traceback (most recent call last):
  File "PPO_Train.py", line 82, in train_and_evaluate
    model.learn(total_timesteps=350000)
  File "/home/joseph/anaconda3/envs/RL/lib/python3.8/site-packages/stable_baselines3/ppo/ppo.py", line 307, in learn
    return super().learn(
  File "/home/joseph/anaconda3/envs/RL/lib/python3.8/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 248, in learn
    continue_training = self.collect_rollouts(self.env, callback, self.rollout_buffer, n_rollout_steps=self.n_steps)
  File "/home/joseph/anaconda3/envs/RL/lib/python3.8/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 166, in collect_rollouts
    actions, values, log_probs = self.policy(obs_tensor)
  File "/home/joseph/anaconda3/envs/RL/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/joseph/anaconda3/envs/RL/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/joseph/anaconda3/envs/RL/lib/python3.8/site-packages/stable_baselines3/common/policies.py", line 635, in forward
    actions = distribution.get_actions(deterministic=deterministic)
  File "/home/joseph/anaconda3/envs/RL/lib/python3.8/site-packages/stable_baselines3/common/distributions.py", line 89, in get_actions
    return self.sample()
  File "/home/joseph/anaconda3/envs/RL/lib/python3.8/site-packages/stable_baselines3/common/distributions.py", line 183, in sample
    return self.distribution.rsample()
  File "/home/joseph/anaconda3/envs/RL/lib/python3.8/site-packages/torch/distributions/normal.py", line 76, in rsample
    return self.loc + eps * self.scale
Exception